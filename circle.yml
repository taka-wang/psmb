
machine:
    timezone:
        Asia/Taipei
    services:
        - docker

dependencies:
    pre:
        - sudo pip install docker-compose

test:
    pre:
        # test psmb and do codecov
        - mkdir shared
        - echo "" > shared/coverage.txt
        # @redis-writer
        - docker-compose -f redis-writer/docker-compose.yml build --no-cache
        - docker-compose -f redis-writer/docker-compose.yml up --abort-on-container-exit
        - docker-compose -f redis-writer/docker-compose.yml stop
        # @viper-conf
        - docker build -t conf --no-cache=true -f viper-conf/Dockerfile .
        - docker run -v "$PWD/shared:/shared" conf
        # @mini-conf
        - docker build -t conf --no-cache=true -f mini-conf/Dockerfile .
        - docker run conf
        # @psmb
        - docker build -t psmb --no-cache=true . 
        - docker run -v "$PWD/shared:/shared" psmb
        # @cron
        - docker build -t cron --no-cache=true -f cron/Dockerfile .
        - docker run -v "$PWD/shared:/shared" cron
        # @mem-filter
        - docker build -t filter --no-cache=true -f mem-filter/Dockerfile .
        - docker run -v "$PWD/shared:/shared" filter
        # @mem-reader
        - docker build -t reader --no-cache=true -f mem-reader/Dockerfile .
        - docker run -v "$PWD/shared:/shared" reader
        # @mem-writer
        - docker build -t writer --no-cache=true -f mem-writer/Dockerfile .
        - docker run -v "$PWD/shared:/shared" writer
        # @mgo-history
        - docker-compose -f mgo-history/docker-compose.yml build --no-cache
        - docker-compose -f mgo-history/docker-compose.yml up --abort-on-container-exit
        - docker-compose -f mgo-history/docker-compose.yml stop
        # @redis-filter
        - docker-compose -f redis-filter/docker-compose.yml build --no-cache
        - docker-compose -f redis-filter/docker-compose.yml up --abort-on-container-exit
        - docker-compose -f redis-filter/docker-compose.yml stop
        # @redis-history
        - docker-compose -f redis-history/docker-compose.yml build --no-cache
        - docker-compose -f redis-history/docker-compose.yml up --abort-on-container-exit
        - docker-compose -f redis-history/docker-compose.yml stop
        # codecov
        - bash <(curl -s https://codecov.io/bash) -t 558aa53d-c58d-4df4-a1c1-a22a6e6d8572
    override:
        # build cache
        - docker build -t golang:x86-cache -f release/Dockerfile.x86-cache .
        # build builder
        - docker build -t builder:x86 --no-cache=true -f release/Dockerfile.x86-build .
        - docker run -itd --name=builder builder:x86
        # copy binary to release folder
        - docker cp builder:/psmb-srv release/
        # build release image
        - docker build -t edgepro/psmb-srv:x86 --no-cache=true -f release/Dockerfile.x86-pack release/.
        # ci
        - docker-compose -f docker-compose.circle rm -f -a
        - docker-compose -f docker-compose.circle pull
        - docker-compose -f docker-compose.circle build
        - docker-compose -f docker-compose.circle up --abort-on-container-exit
    post:
        - mv shared/coverage.txt ${CIRCLE_ARTIFACTS}/
        - docker-compose -f docker-compose.circle stop
        - docker-compose -f docker-compose.circle rm -f -a

# publish to dockerhub
deployment:
    hub:
        branch: dev
        commands:
            - docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS
            - docker tag edgepro/psmb-srv:x86 edgepro/psmb-srv:latest
            - docker push edgepro/psmb-srv:latest
            - docker push edgepro/psmb-srv:x86